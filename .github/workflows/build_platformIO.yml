name: PlatformIO build

on:
  pull_request:
    types: [opened, reopened]
    paths:
      - ".github/workflows/build_platformIO.yml"
      - "library.json"
      - "examples/**"
  push:
    paths:
      - ".github/workflows/build_platformIO.yml"
      - "library.json"
      - "examples/**"
  release:
    types: [published, edited]

jobs:
  validate_lib_json:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: get latest release version number
        id: latest_ver
        run: echo "::set-output name=release::$(awk -F "=" '/version/ {print $2}' library.properties)"

      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio

      - name: package lib
        run: pio package pack -o PlatformIO-RF24Mesh-${{ steps.latest_ver.outputs.release }}.tar.gz

      - name: Save artifact
        uses: actions/upload-artifact@v2
        with:
          name: "PIO_pkg_RF24Mesh"
          path: PlatformIO*.tar.gz

      - name: Upload Release assets
        if: github.event_name == 'release'
        uses: csexton/release-asset-action@master
        with:
          pattern: "PlatformIO*.tar.gz"
          github-token: ${{ secrets.GITHUB_TOKEN }}

  check_formatting:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Check code formatting
        uses: per1234/artistic-style-action@main
        with:
          options-file-path: ./examples/examples_formatter.conf
          name-patterns: |
            - '*.ino'
            - '*.cpp'
            - '*.hpp'
            - '*.h'
          target-paths: |
            - examples

  build:
    needs: [check_formatting, validate_lib_json]
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

      matrix:
        example:
          - "examples/Getting_Started_SimpleClient_Mesh/Getting_Started_SimpleClient_Mesh.ino"
          - "examples/Getting_Started_SimpleServer_Mesh/Getting_Started_SimpleServer_Mesh.ino"
          - "examples/InteractiveServer_Mesh/InteractiveServer_Mesh.ino"
          - "examples/MQTT/mqtt_basic/mqtt_basic.ino"
          - "examples/MQTT/mqtt_basic_2/mqtt_basic_2.ino"
          - "examples/SimpleClient_Mesh/SimpleClient_Mesh.ino"
          - "examples/SLIP_Gateway/SLIP_Gateway.ino"

        # these need RF24_TAP defined
        # - "examples/SLIP_InteractiveServer/SLIP_InteractiveServer.ino"  # also requires EEPROM.h
        # - "examples/TAP/Getting_Started_InteractiveServer/Getting_Started_InteractiveServer.ino"
        # - "examples/TAP/Getting_Started_SimpleClient/Getting_Started_SimpleClient.ino"
        # - "examples/TAP/Getting_Started_SimpleClient_DNS/Getting_Started_SimpleClient_DNS.ino"
        # - "examples/TAP/Getting_Started_SimpleServer/Getting_Started_SimpleServer.ino"
        # - "examples/TAP/Getting_Started_SimpleServer_Minimal/Getting_Started_SimpleServer_Minimal.ino"

        # - "examples/TAP/InteractiveServer/InteractiveServer.ino"  # specific to AVR boards
        # - "examples/InteractiveServer_Mesh_ESPWifi/InteractiveServer_Mesh_ESPWifi.ino"  # requires ESP8266WiFi.h
        board:
          - "teensy31"
          - "teensy35"
          - "teensy36"
          - "teensy40"
          - "teensy41"
          - "teensylc"

    steps:
      - uses: actions/checkout@v2

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache PlatformIO
        uses: actions/cache@v2
        with:
          path: ~/.platformio
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio

      # "dependencies" field in JSON should automatically install RF24 & RF24Network.
      # Because we run this CI test against the local repo, the JSON seems neglected
      - name: Install library dependencies
        run: |
          pio lib -g install nrf24/RF24
          pio lib -g install nrf24/RF24Network
          pio lib -g install nrf24/RF24Mesh
          pio lib -g install knolleary/PubSubClient
          pio lib -g install 256dpi/MQTT

      - name: Run PlatformIO
        run: pio ci --lib="." --board=${{ matrix.board }}
        env:
          PLATFORMIO_CI_SRC: ${{ matrix.example }}
